Bättre layout av översta raden i place-sidebar. Dvs kanske ej tabell utan element med float och fast bredd för ikonerna.

Klura på hur sidebar och annat ska renderas på padda.

Skriva fler tester.

Fixa ":active"-motsvarighet för touchskärm.

Rensa AppView från hänvisningar till placeviews.

Klick på kartan ska ej stänga sidebar.

BUGGAR:
Om man t.ex. går direkt från /info till /place/... via autocomplete, lagras en rot-url med pushState emellan. Så ska ej ske.

Fram/tillbaka i browsern flyttar inte kartan enligt hashen, tvärtom ändras hashen enligt kartan ...
pushState görs nämligen innan man har "flugit" till stället i fråga (vid autocomplete), inte efter.

Idag:
Användare navigerar bakåt/framåt i webbläsaren 
    -> router.render*() körs 
    -> modelldata ändras 
    -> router fångar signaler o kör navigate()
    -> webbläsarhistorik fuckas upp
Hur fixa så att router BARA agerar på signaler och kör navigate() när ändringar i state kommer från andra interaktioner,
d.v.s. inte har sin grund i routern själv?
Antagligen tänka om så att routern inte alls reagerar på förändringar i modeller, utan helt särskilda signaler från views.
Typ: 
    'user-opened-place' (med frivilligt location-objekt)
    'user-closed-place'
    'user-opened-info'
    'user-closed-info'
    'user-closed-sidebar'

DESIGNMÅL:
1. Alla variabla data om en viss vy ("position", "visible", "active" m.m.) ska ej lagras i vyn utan i korresponderande modell.
2. Vyer ska endast uppdatera DOM på signal från modell. Modellens state styr vyn. (Undantag: panorering m.m. i kartan)
3. Vyer går alltså inte direkt från användarinteraktion till DOM-uppdatering, utan alltid via uppdatering av modellen.
4. Vyer bör i idealfallet inte känna till någon annan modul än sin modell. Undantag AppView som knyter ihop allesammans.
5. Modeller ska vara helt vy-agnostiska och inte känna till dem alls.
6. Vyer är i första hand ansvariga för att hålla sina modeller uppdaterade som följd av egna DOM-händelser,
   och trigga events EFTER att så har skett.
   
