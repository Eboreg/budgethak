Klura på hur sidebar och annat ska renderas på padda.

Fixa ":active"-motsvarighet för touchskärm.

Vore snyggast om GET-querystring ej lades på just när man går in på "förstasidan".

Fixa add-place-funktionalitet.

leaflet-usermarker??

Gör kommentar obligatorisk vid Place-update och kanske även create. Minst X antal tecken.

Kanske visa ajax-loader på my-location-icon tills resultat uppnåtts.

Lyft över image-upload-grejs från gamla SidebarView till nya.

BUGGAR:
Om man går in på Place-länk med zoom angivet till t ex 15, ignoreras detta MEN querystring uppdateras ej.
Antingen ska man hamna på angiven plats och zoomnivå ELLER så ska querystring uppdateras.

Att köra L.DomEvent.disableClickPropagation(this.el) i MenuBarView gör så att NÄSTA klick VAR SOM HELST
i Leaflet (karta/marker/etc) ignoreras?! Varför?


DESIGNMÅL 2.0:
1. Modeller ska vara fokuserade på att innehålla data som skickas till templates. Övriga state-data
   håller vyerna reda på.
2. Vyer bör i idealfallet inte känna till någon annan modul än sin modell och EventBus. Undantag AppView 
   som knyter ihop allesammans, och vyer som har "barn" (MapView).
3. Modeller ska vara helt vy-agnostiska och inte känna till dem alls.
4. Vyer är i första hand ansvariga för att hålla sina modeller uppdaterade som följd av egna DOM-händelser,
   och trigga events EFTER att så har skett.
5. "Information expert principle"; det objekt som har informationen, ska sköta nödvändig logik på den


DESIGNMÅL 1.0 (deprecated):
1. Alla variabla data om en viss vy ("position", "visible", "active" m.m.) ska ej lagras i vyn utan i
   korresponderande modell.
2. Vyer ska endast uppdatera DOM på signal från modell. Modellens state styr vyn. (Undantag: panorering 
   m.m. i kartan)
3. Vyer går alltså inte direkt från användarinteraktion till DOM-uppdatering, utan alltid via uppdatering 
   av modellen.
4. Vyer bör i idealfallet inte känna till någon annan modul än sin modell och EventBus. Undantag AppView 
   som knyter ihop allesammans.
5. Modeller ska vara helt vy-agnostiska och inte känna till dem alls.
6. Vyer är i första hand ansvariga för att hålla sina modeller uppdaterade som följd av egna DOM-händelser,
   och trigga events EFTER att så har skett.
7. "Information expert principle"; det objekt som har informationen, ska sköta nödvändig logik på den
   
